function(
    is_offline="false",
    private_registry="registry.tmaxcloud.org",
    ISTIO_VERSION= "1.5.1",
)

local target_registry = if is_offline == "false" then "" else private_registry + "/";

[
  {
    "apiVersion": "v1",
    "kind": "ConfigMap",
    "metadata": {
      "name": "istio-sidecar-injector",
      "namespace": "istio-system",
      "labels": {
        "release": "istio"
      }
    },
    "data": {
      "values": std.join("",
        [
          "{\n",
          "  \"global\": {\n",
          "    \"arch\": {\n",
          "      \"amd64\": 2,\n",
          "      \"ppc64le\": 2,\n",
          "      \"s390x\": 2\n",
          "    },\n",
          "    \"certificates\": [],\n",
          "    \"configNamespace\": \"istio-system\",\n",
          "    \"configValidation\": true,\n",
          "    \"controlPlaneSecurityEnabled\": true,\n",
          "    \"defaultNodeSelector\": {},\n",
          "    \"defaultPodDisruptionBudget\": {\n",
          "      \"enabled\": true\n",
          "    },\n",
          "    \"defaultResources\": {\n",
          "      \"requests\": {\n",
          "        \"cpu\": \"10m\"\n",
          "      }\n",
          "    },\n",
          "    \"disablePolicyChecks\": true,\n",
          "    \"enableHelmTest\": false,\n",
          "    \"enableTracing\": true,\n",
          "    \"enabled\": true,\n",
          "    \"hub\": ", target_registry, "docker.io/istio,\n",
          "    \"imagePullPolicy\": \"IfNotPresent\",\n",
          "    \"imagePullSecrets\": [],\n",
          "    \"istioNamespace\": \"istio-system\",\n",
          "    \"istiod\": {\n",
          "      \"enabled\": true\n",
          "    },\n",
          "    \"jwtPolicy\": \"first-party-jwt\",\n",
          "    \"k8sIngress\": {\n",
          "      \"enableHttps\": false,\n",
          "      \"enabled\": false,\n",
          "      \"gatewayName\": \"ingressgateway\"\n",
          "    },\n",
          "    \"localityLbSetting\": {\n",
          "      \"enabled\": true\n",
          "    },\n",
          "    \"logAsJson\": false,\n",
          "    \"logging\": {\n",
          "      \"level\": \"default:info\"\n",
          "    },\n",
          "    \"meshExpansion\": {\n",
          "      \"enabled\": false,\n",
          "      \"useILB\": false\n",
          "    },\n",
          "    \"meshNetworks\": {},\n",
          "    \"mountMtlsCerts\": false,\n",
          "    \"mtls\": {\n",
          "      \"auto\": true,\n",
          "      \"enabled\": false\n",
          "    },\n",
          "    \"multiCluster\": {\n",
          "      \"clusterName\": \"\",\n",
          "      \"enabled\": false\n",
          "    },\n",
          "    \"namespace\": \"istio-system\",\n",
          "    \"network\": \"\",\n",
          "    \"omitSidecarInjectorConfigMap\": false,\n",
          "    \"oneNamespace\": false,\n",
          "    \"operatorManageWebhooks\": false,\n",
          "    \"outboundTrafficPolicy\": {\n",
          "      \"mode\": \"ALLOW_ANY\"\n",
          "    },\n",
          "    \"pilotCertProvider\": \"istiod\",\n",
          "    \"policyCheckFailOpen\": false,\n",
          "    \"policyNamespace\": \"istio-system\",\n",
          "    \"priorityClassName\": \"\",\n",
          "    \"prometheusNamespace\": \"istio-system\",\n",
          "    \"proxy\": {\n",
          "      \"accessLogEncoding\": \"JSON\",\n",
          "      \"accessLogFile\": \"\",\n",
          "      \"accessLogFormat\": \"\",\n",
          "      \"autoInject\": \"enabled\",\n",
          "      \"clusterDomain\": \"cluster.local\",\n",
          "      \"componentLogLevel\": \"misc:error\",\n",
          "      \"concurrency\": 2,\n",
          "      \"dnsRefreshRate\": \"300s\",\n",
          "      \"enableCoreDump\": false,\n",
          "      \"envoyAccessLogService\": {\n",
          "        \"enabled\": false\n",
          "      },\n",
          "      \"envoyMetricsService\": {\n",
          "        \"enabled\": false,\n",
          "        \"tcpKeepalive\": {\n",
          "          \"interval\": \"10s\",\n",
          "          \"probes\": 3,\n",
          "          \"time\": \"10s\"\n",
          "        },\n",
          "        \"tlsSettings\": {\n",
          "          \"mode\": \"DISABLE\",\n",
          "          \"subjectAltNames\": []\n",
          "        }\n",
          "      },\n",
          "      \"envoyStatsd\": {\n",
          "        \"enabled\": false\n",
          "      },\n",
          "      \"excludeIPRanges\": \"\",\n",
          "      \"excludeInboundPorts\": \"\",\n",
          "      \"excludeOutboundPorts\": \"\",\n",
          "      \"image\": \"proxyv2\",\n",
          "      \"includeIPRanges\": \"*\",\n",
          "      \"includeInboundPorts\": \"*\",\n",
          "      \"kubevirtInterfaces\": \"\",\n",
          "      \"logLevel\": \"warning\",\n",
          "      \"privileged\": false,\n",
          "      \"protocolDetectionTimeout\": \"100ms\",\n",
          "      \"readinessFailureThreshold\": 30,\n",
          "      \"readinessInitialDelaySeconds\": 1,\n",
          "      \"readinessPeriodSeconds\": 2,\n",
          "      \"resources\": {\n",
          "        \"limits\": {\n",
          "          \"cpu\": \"2000m\",\n",
          "          \"memory\": \"1024Mi\"\n",
          "        },\n",
          "        \"requests\": {\n",
          "          \"cpu\": \"100m\",\n",
          "          \"memory\": \"128Mi\"\n",
          "        }\n",
          "      },\n",
          "      \"statusPort\": 15020,\n",
          "      \"tracer\": \"zipkin\"\n",
          "    },\n",
          "    \"proxy_init\": {\n",
          "      \"image\": \"proxyv2\",\n",
          "      \"resources\": {\n",
          "        \"limits\": {\n",
          "          \"cpu\": \"100m\",\n",
          "          \"memory\": \"50Mi\"\n",
          "        },\n",
          "        \"requests\": {\n",
          "          \"cpu\": \"10m\",\n",
          "          \"memory\": \"10Mi\"\n",
          "        }\n",
          "      }\n",
          "    },\n",
          "    \"sds\": {\n",
          "      \"enabled\": false,\n",
          "      \"token\": {\n",
          "        \"aud\": \"istio-ca\"\n",
          "      },\n",
          "      \"udsPath\": \"\"\n",
          "    },\n",
          "    \"securityNamespace\": \"istio-system\",\n",
          "    \"sts\": {\n",
          "      \"servicePort\": 0\n",
          "    },\n",
          "\n",
          "    \"tag\": \"1.5.1\",\n",
          "    \"telemetryNamespace\": \"istio-system\",\n",
          "    \"tracer\": {\n",
          "      \"datadog\": {\n",
          "        \"address\": \"$(HOST_IP):8126\"\n",
          "      },\n",
          "      \"lightstep\": {\n",
          "        \"accessToken\": \"\",\n",
          "        \"address\": \"\",\n",
          "        \"cacertPath\": \"\",\n",
          "        \"secure\": true\n",
          "      },\n",
          "      \"stackdriver\": {\n",
          "        \"debug\": false,\n",
          "        \"maxNumberOfAnnotations\": 200,\n",
          "        \"maxNumberOfAttributes\": 200,\n",
          "        \"maxNumberOfMessageEvents\": 200\n",
          "      },\n",
          "      \"zipkin\": {\n",
          "        \"address\": \"\"\n",
          "      }\n",
          "    },\n",
          "    \"trustDomain\": \"cluster.local\",\n",
          "    \"useMCP\": false\n",
          "  },\n",
          "  \"istio_cni\": {\n",
          "    \"enabled\": false\n",
          "  },\n",
          "  \"sidecarInjectorWebhook\": {\n",
          "    \"alwaysInjectSelector\": [],\n",
          "    \"enableNamespacesByDefault\": false,\n",
          "    \"enabled\": false,\n",
          "    \"image\": \"sidecar_injector\",\n",
          "    \"injectLabel\": \"istio-injection\",\n",
          "    \"injectedAnnotations\": {},\n",
          "    \"namespace\": \"istio-system\",\n",
          "    \"neverInjectSelector\": [],\n",
          "    \"objectSelector\": {\n",
          "      \"autoInject\": true,\n",
          "      \"enabled\": false\n",
          "    },\n",
          "    \"rewriteAppHTTPProbe\": false,\n",
          "    \"selfSigned\": false\n",
          "  }\n",
          "}"
        ]
      ),
      "config": std.join("",
        [
          "policy: enabled\nalwaysInjectSelector:\n",
          "        []\n",
          "neverInjectSelector:\n",
          "        []\n",
          "injectedAnnotations:\n",
          "\n",
          "# Configmap optimized for Istiod. Please DO NOT MERGE all changes from istio - in particular those dependent on\n",
          "# Values.yaml, which should not be used by istiod.\n",
          "\n",
          "# Istiod only uses SDS based config ( files will mapped/handled by SDS).\n",
          "\n",
          "template: |\n",
          "  rewriteAppHTTPProbe: {{ valueOrDefault .Values.sidecarInjectorWebhook.rewriteAppHTTPProbe false }}\n",
          "  initContainers:\n",
          "  {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}\n",
          "  {{ if .Values.istio_cni.enabled -}}\n",
          "  - name: istio-validation\n",
          "  {{ else -}}\n",
          "  - name: istio-init\n",
          "  {{ end -}}\n",
          "  {{- if contains \"/\" .Values.global.proxy_init.image }}\n",
          "    image: \"{{ .Values.global.proxy_init.image }}\"\n",
          "  {{- else }}\n",
          "    image: \"{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}\"\n",
          "  {{- end }}\n",
          "    command:\n",
          "    - istio-iptables\n",
          "    - \"-p\"\n",
          "    - 15001\n",
          "    - \"-z\"\n",
          "    - \"15006\"\n",
          "    - \"-u\"\n",
          "    - 1337\n",
          "    - \"-m\"\n",
          "    - \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\"\n",
          "    - \"-i\"\n",
          "    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}\"\n",
          "    - \"-x\"\n",
          "    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}\"\n",
          "    - \"-b\"\n",
          "    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}\"\n",
          "    - \"-d\"\n",
          "    - \"15090,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\"\n",
          "    {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts \"\") \"\") -}}\n",
          "    - \"-o\"\n",
          "    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\"\n",
          "    {{ end -}}\n",
          "    {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}\n",
          "    - \"-k\"\n",
          "    - \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}\"\n",
          "    {{ end -}}\n",
          "    {{ if .Values.istio_cni.enabled -}}\n",
          "    - \"--run-validation\"\n",
          "    - \"--skip-rule-apply\"\n",
          "    {{ end -}}\n",
          "    imagePullPolicy: \"{{ valueOrDefault .Values.global.imagePullPolicy `Always` }}\"\n",
          "  {{- if .Values.global.proxy_init.resources }}\n",
          "    resources:\n",
          "      {{ toYaml .Values.global.proxy_init.resources | indent 4 }}\n",
          "  {{- else }}\n",
          "    resources: {}\n",
          "  {{- end }}\n",
          "    securityContext:\n",
          "      allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\n",
          "      privileged: {{ .Values.global.proxy.privileged }}\n",
          "      capabilities:\n",
          "    {{- if not .Values.istio_cni.enabled }}\n",
          "        add:\n",
          "        - NET_ADMIN\n",
          "        - NET_RAW\n",
          "    {{- end }}\n",
          "        drop:\n",
          "        - ALL\n",
          "      readOnlyRootFilesystem: false\n",
          "    {{- if not .Values.istio_cni.enabled }}\n",
          "      runAsGroup: 0\n",
          "      runAsNonRoot: false\n",
          "      runAsUser: 0\n",
          "    {{- else }}\n",
          "      runAsGroup: 1337\n",
          "      runAsUser: 1337\n",
          "      runAsNonRoot: true\n",
          "    {{- end }}\n",
          "    restartPolicy: Always\n",
          "  {{ end -}}\n",
          "  {{- if eq .Values.global.proxy.enableCoreDump true }}\n",
          "  - name: enable-core-dump\n",
          "    args:\n",
          "    - -c\n",
          "    - sysctl -w kernel.core_pattern=/var/lib/istio/core.proxy && ulimit -c unlimited\n",
          "    command:\n",
          "      - /bin/sh\n",
          "  {{- if contains \"/\" .Values.global.proxy_init.image }}\n",
          "    image: \"{{ .Values.global.proxy_init.image }}\"\n",
          "  {{- else }}\n",
          "    image: \"{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}\"\n",
          "  {{- end }}\n",
          "    imagePullPolicy: \"{{ valueOrDefault .Values.global.imagePullPolicy `Always` }}\"\n",
          "    resources: {}\n",
          "    securityContext:\n",
          "      allowPrivilegeEscalation: true\n",
          "      capabilities:\n",
          "        add:\n",
          "        - SYS_ADMIN\n",
          "        drop:\n",
          "        - ALL\n",
          "      privileged: true\n",
          "      readOnlyRootFilesystem: false\n",
          "      runAsGroup: 0\n",
          "      runAsNonRoot: false\n",
          "      runAsUser: 0\n",
          "  {{ end }}\n",
          "  containers:\n",
          "  - name: istio-proxy\n",
          "  {{- if contains \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\n",
          "    image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\"\n",
          "  {{- else }}\n",
          "    image: \"{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}\"\n",
          "  {{- end }}\n",
          "    ports:\n",
          "    - containerPort: 15090\n",
          "      protocol: TCP\n",
          "      name: http-envoy-prom\n",
          "    args:\n",
          "    - proxy\n",
          "    - sidecar\n",
          "    - --domain\n",
          "    - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\n",
          "    - --configPath\n",
          "    - \"/etc/istio/proxy\"\n",
          "    - --binaryPath\n",
          "    - \"/usr/local/bin/envoy\"\n",
          "    - --serviceCluster\n",
          "    {{ if ne \"\" (index .ObjectMeta.Labels \"app\") -}}\n",
          "    - \"{{ index .ObjectMeta.Labels `app` }}.$(POD_NAMESPACE)\"\n",
          "    {{ else -}}\n",
          "    - \"{{ valueOrDefault .DeploymentMeta.Name `istio-proxy` }}.{{ valueOrDefault .DeploymentMeta.Namespace `default` }}\"\n",
          "    {{ end -}}\n",
          "    - --drainDuration\n",
          "    - \"{{ formatDuration .ProxyConfig.DrainDuration }}\"\n",
          "    - --parentShutdownDuration\n",
          "    - \"{{ formatDuration .ProxyConfig.ParentShutdownDuration }}\"\n",
          "    - --discoveryAddress\n",
          "    - \"{{ annotation .ObjectMeta `sidecar.istio.io/discoveryAddress` .ProxyConfig.DiscoveryAddress }}\"\n",
          "  {{- if eq .Values.global.proxy.tracer \"lightstep\" }}\n",
          "    - --lightstepAddress\n",
          "    - \"{{ .ProxyConfig.GetTracing.GetLightstep.GetAddress }}\"\n",
          "    - --lightstepAccessToken\n",
          "    - \"{{ .ProxyConfig.GetTracing.GetLightstep.GetAccessToken }}\"\n",
          "    - --lightstepSecure={{ .ProxyConfig.GetTracing.GetLightstep.GetSecure }}\n",
          "    - --lightstepCacertPath\n",
          "    - \"{{ .ProxyConfig.GetTracing.GetLightstep.GetCacertPath }}\"\n",
          "  {{- else if eq .Values.global.proxy.tracer \"zipkin\" }}\n",
          "    - --zipkinAddress\n",
          "    - \"{{ .ProxyConfig.GetTracing.GetZipkin.GetAddress }}\"\n",
          "  {{- else if eq .Values.global.proxy.tracer \"datadog\" }}\n",
          "    - --datadogAgentAddress\n",
          "    - \"{{ .ProxyConfig.GetTracing.GetDatadog.GetAddress }}\"\n",
          "  {{- end }}\n",
          "    - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel}}\n",
          "    - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel}}\n",
          "    - --connectTimeout\n",
          "    - \"{{ formatDuration .ProxyConfig.ConnectTimeout }}\"\n",
          "  {{- if .Values.global.proxy.envoyStatsd.enabled }}\n",
          "    - --statsdUdpAddress\n",
          "    - \"{{ .ProxyConfig.StatsdUdpAddress }}\"\n",
          "  {{- end }}\n",
          "  {{- if .Values.global.proxy.envoyMetricsService.enabled }}\n",
          "    - --envoyMetricsService\n",
          "    - '{{ protoToJSON .ProxyConfig.EnvoyMetricsService }}'\n",
          "  {{- end }}\n",
          "  {{- if .Values.global.proxy.envoyAccessLogService.enabled }}\n",
          "    - --envoyAccessLogService\n",
          "    - '{{ protoToJSON .ProxyConfig.EnvoyAccessLogService }}'\n",
          "  {{- end }}\n",
          "    - --proxyAdminPort\n",
          "    - \"{{ .ProxyConfig.ProxyAdminPort }}\"\n",
          "    {{ if gt .ProxyConfig.Concurrency 0 -}}\n",
          "    - --concurrency\n",
          "    - \"{{ .ProxyConfig.Concurrency }}\"\n",
          "    {{ end -}}\n",
          "    {{- if .Values.global.istiod.enabled }}\n",
          "    - --controlPlaneAuthPolicy\n",
          "    - NONE\n",
          "    {{- else if .Values.global.controlPlaneSecurityEnabled }}\n",
          "    - --controlPlaneAuthPolicy\n",
          "    - MUTUAL_TLS\n",
          "    {{- else }}\n",
          "    - --controlPlaneAuthPolicy\n",
          "    - NONE\n",
          "    {{- end }}\n",
          "    - --dnsRefreshRate\n",
          "    - {{ valueOrDefault .Values.global.proxy.dnsRefreshRate \"300s\" }}\n",
          "  {{- if (ne (annotation .ObjectMeta \"status.sidecar.istio.io/port\" .Values.global.proxy.statusPort) \"0\") }}\n",
          "    - --statusPort\n",
          "    - \"{{ annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort }}\"\n",
          "  {{- end }}\n",
          "  {{- if .Values.global.sts.servicePort }}\n",
          "    - --stsPort={{ .Values.global.sts.servicePort }}\n",
          "  {{- end }}\n",
          "  {{- if .Values.global.trustDomain }}\n",
          "    - --trust-domain={{ .Values.global.trustDomain }}\n",
          "  {{- end }}\n",
          "  {{- if .Values.global.logAsJson }}\n",
          "    - --log_as_json\n",
          "  {{- end }}\n",
          "    - --controlPlaneBootstrap=false\n",
          "  {{- if .Values.global.proxy.lifecycle }}\n",
          "    lifecycle:\n",
          "      {{ toYaml .Values.global.proxy.lifecycle | indent 4 }}\n",
          "    {{- end }}\n",
          "    env:\n",
          "    - name: JWT_POLICY\n",
          "      value: {{ .Values.global.jwtPolicy }}\n",
          "    - name: PILOT_CERT_PROVIDER\n",
          "      value: {{ .Values.global.pilotCertProvider }}\n",
          "    # Temp, pending PR to make it default or based on the istiodAddr env\n",
          "    - name: CA_ADDR\n",
          "    {{- if .Values.global.caAddress }}\n",
          "      value: {{ .Values.global.caAddress }}\n",
          "    {{- else if .Values.global.configNamespace }}\n",
          "      value: istio-pilot.{{ .Values.global.configNamespace }}.svc:15012\n",
          "    {{- else }}\n",
          "      value: istio-pilot.istio-system.svc:15012\n",
          "    {{- end }}\n",
          "    - name: POD_NAME\n",
          "      valueFrom:\n",
          "        fieldRef:\n",
          "          fieldPath: metadata.name\n",
          "    - name: POD_NAMESPACE\n",
          "      valueFrom:\n",
          "        fieldRef:\n",
          "          fieldPath: metadata.namespace\n",
          "    - name: INSTANCE_IP\n",
          "      valueFrom:\n",
          "        fieldRef:\n",
          "          fieldPath: status.podIP\n",
          "    - name: SERVICE_ACCOUNT\n",
          "      valueFrom:\n",
          "        fieldRef:\n",
          "          fieldPath: spec.serviceAccountName\n",
          "    - name: HOST_IP\n",
          "      valueFrom:\n",
          "        fieldRef:\n",
          "          fieldPath: status.hostIP\n",
          "  {{- if eq .Values.global.proxy.tracer \"datadog\" }}\n",
          "  {{- if isset .ObjectMeta.Annotations `apm.datadoghq.com/env` }}\n",
          "  {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n",
          "    - name: {{ $key }}\n",
          "      value: \"{{ $value }}\"\n",
          "  {{- end }}\n",
          "  {{- end }}\n",
          "  {{- end }}\n",
          "    - name: ISTIO_META_POD_PORTS\n",
          "      value: |-\n",
          "        [\n",
          "        {{- $first := true }}\n",
          "        {{- range $index1, $c := .Spec.Containers }}\n",
          "          {{- range $index2, $p := $c.Ports }}\n",
          "            {{- if (structToJSON $p) }}\n",
          "            {{if not $first}},{{end}}{{ structToJSON $p }}\n",
          "            {{- $first = false }}\n",
          "            {{- end }}\n",
          "          {{- end}}\n",
          "        {{- end}}\n",
          "        ]\n",
          "    - name: ISTIO_META_CLUSTER_ID\n",
          "      value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\"\n",
          "    - name: ISTIO_META_POD_NAME\n",
          "      valueFrom:\n",
          "        fieldRef:\n",
          "          fieldPath: metadata.name\n",
          "    - name: ISTIO_META_CONFIG_NAMESPACE\n",
          "      valueFrom:\n",
          "        fieldRef:\n",
          "          fieldPath: metadata.namespace\n",
          "    - name: ISTIO_META_INTERCEPTION_MODE\n",
          "      value: \"{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}\"\n",
          "    {{- if .Values.global.network }}\n",
          "    - name: ISTIO_META_NETWORK\n",
          "      value: \"{{ .Values.global.network }}\"\n",
          "    {{- end }}\n",
          "    {{ if .ObjectMeta.Annotations }}\n",
          "    - name: ISTIO_METAJSON_ANNOTATIONS\n",
          "      value: |\n",
          "             {{ toJSON .ObjectMeta.Annotations }}\n",
          "    {{ end }}\n",
          "    {{- if .DeploymentMeta.Name }}\n",
          "    - name: ISTIO_META_WORKLOAD_NAME\n",
          "      value: {{ .DeploymentMeta.Name }}\n",
          "    {{ end }}\n",
          "    {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\n",
          "    - name: ISTIO_META_OWNER\n",
          "      value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n",
          "    {{- end}}\n",
          "    {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n",
          "    - name: ISTIO_BOOTSTRAP_OVERRIDE\n",
          "      value: \"/etc/istio/custom-bootstrap/custom_bootstrap.json\"\n",
          "    {{- end }}\n",
          "    {{- if .Values.global.meshID }}\n",
          "    - name: ISTIO_META_MESH_ID\n",
          "      value: \"{{ .Values.global.meshID }}\"\n",
          "    {{- else if .Values.global.trustDomain }}\n",
          "    - name: ISTIO_META_MESH_ID\n",
          "      value: \"{{ .Values.global.trustDomain }}\"\n",
          "    {{- end }}\n",
          "    {{- if eq .Values.global.proxy.tracer \"stackdriver\" }}\n",
          "    - name: STACKDRIVER_TRACING_ENABLED\n",
          "      value: \"true\"\n",
          "    - name: STACKDRIVER_TRACING_DEBUG\n",
          "      value: \"{{ .ProxyConfig.GetTracing.GetStackdriver.GetDebug }}\"\n",
          "    - name: STACKDRIVER_TRACING_MAX_NUMBER_OF_ANNOTATIONS\n",
          "      value: \"{{ .ProxyConfig.GetTracing.GetStackdriver.GetMaxNumberOfAnnotations.Value }}\"\n",
          "    - name: STACKDRIVER_TRACING_MAX_NUMBER_OF_ATTRIBUTES\n",
          "      value: \"{{ .ProxyConfig.GetTracing.GetStackdriver.GetMaxNumberOfAttributes.Value }}\"\n",
          "    - name: STACKDRIVER_TRACING_MAX_NUMBER_OF_MESSAGE_EVENTS\n",
          "      value: \"{{ .ProxyConfig.GetTracing.GetStackdriver.GetMaxNumberOfMessageEvents.Value }}\"\n",
          "    {{- end }}\n",
          "    {{- if and (eq .Values.global.proxy.tracer \"datadog\") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n",
          "    {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n",
          "      - name: {{ $key }}\n",
          "        value: \"{{ $value }}\"\n",
          "    {{- end }}\n",
          "    {{- end }}\n",
          "    {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\n",
          "    - name: {{ $key }}\n",
          "      value: \"{{ $value }}\"\n",
          "    {{- end }}\n",
          "    imagePullPolicy: \"{{ valueOrDefault .Values.global.imagePullPolicy `Always` }}\"\n",
          "    {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}\n",
          "    readinessProbe:\n",
          "      httpGet:\n",
          "        path: /healthz/ready\n",
          "        port: {{ annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort }}\n",
          "      initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}\n",
          "      periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}\n",
          "      failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}\n",
          "    {{ end -}}\n",
          "    securityContext:\n",
          "      allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\n",
          "      capabilities:\n",
          "        {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}\n",
          "        add:\n",
          "        {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}\n",
          "        - NET_ADMIN\n",
          "        {{- end }}\n",
          "        {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}\n",
          "        - NET_BIND_SERVICE\n",
          "        {{- end }}\n",
          "        {{- end }}\n",
          "        drop:\n",
          "        - ALL\n",
          "      privileged: {{ .Values.global.proxy.privileged }}\n",
          "      readOnlyRootFilesystem: {{ not .Values.global.proxy.enableCoreDump }}\n",
          "      runAsGroup: 1337\n",
          "      fsGroup: 1337\n",
          "      {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}\n",
          "      runAsNonRoot: false\n",
          "      runAsUser: 0\n",
          "      {{- else -}}\n",
          "      runAsNonRoot: true\n",
          "      runAsUser: 1337\n",
          "      {{- end }}\n",
          "    resources:\n",
          "      {{ if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}\n",
          "      requests:\n",
          "        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}\n",
          "        cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}\"\n",
          "        {{ end}}\n",
          "        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}\n",
          "        memory: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}\"\n",
          "        {{ end }}\n",
          "    {{ else -}}\n",
          "  {{- if .Values.global.proxy.resources }}\n",
          "      {{ toYaml .Values.global.proxy.resources | indent 4 }}\n",
          "  {{- end }}\n",
          "    {{  end -}}\n",
          "    volumeMounts:\n",
          "    {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n",
          "    - mountPath: /var/run/secrets/istio\n",
          "      name: istiod-ca-cert\n",
          "    {{- end }}\n",
          "    {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n",
          "    - mountPath: /etc/istio/custom-bootstrap\n",
          "      name: custom-bootstrap-volume\n",
          "    {{- end }}\n",
          "    # SDS channel between istioagent and Envoy\n",
          "    - mountPath: /etc/istio/proxy\n",
          "      name: istio-envoy\n",
          "    {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n",
          "    - mountPath: /var/run/secrets/tokens\n",
          "      name: istio-token\n",
          "    {{- end }}\n",
          "    {{- if .Values.global.mountMtlsCerts }}\n",
          "    # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n",
          "    - mountPath: /etc/certs/\n",
          "      name: istio-certs\n",
          "      readOnly: true\n",
          "    {{- end }}\n",
          "    - name: podinfo\n",
          "      mountPath: /etc/istio/pod\n",
          "    {{- if and (eq .Values.global.proxy.tracer \"lightstep\") .Values.global.tracer.lightstep.cacertPath }}\n",
          "    - mountPath: {{ directory .ProxyConfig.GetTracing.GetLightstep.GetCacertPath }}\n",
          "      name: lightstep-certs\n",
          "      readOnly: true\n",
          "    {{- end }}\n",
          "      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}\n",
          "      {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}\n",
          "    - name: \"{{  $index }}\"\n",
          "      {{ toYaml $value | indent 4 }}\n",
          "      {{ end }}\n",
          "      {{- end }}\n",
          "  volumes:\n",
          "  {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n",
          "  - name: custom-bootstrap-volume\n",
          "    configMap:\n",
          "      name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` \"\" }}\n",
          "  {{- end }}\n",
          "  # SDS channel between istioagent and Envoy\n",
          "  - emptyDir:\n",
          "      medium: Memory\n",
          "    name: istio-envoy\n",
          "  - name: podinfo\n",
          "    downwardAPI:\n",
          "      items:\n",
          "        - path: \"labels\"\n",
          "          fieldRef:\n",
          "            fieldPath: metadata.labels\n",
          "        - path: \"annotations\"\n",
          "          fieldRef:\n",
          "            fieldPath: metadata.annotations\n",
          "  {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n",
          "  - name: istio-token\n",
          "    projected:\n",
          "      sources:\n",
          "      - serviceAccountToken:\n",
          "          path: istio-token\n",
          "          expirationSeconds: 43200\n",
          "          audience: {{ .Values.global.sds.token.aud }}\n",
          "  {{- end }}\n",
          "  {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n",
          "  - name: istiod-ca-cert\n",
          "    configMap:\n",
          "      name: istio-ca-root-cert\n",
          "  {{- end }}\n",
          "  {{- if .Values.global.mountMtlsCerts }}\n",
          "  # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n",
          "  - name: istio-certs\n",
          "    secret:\n",
          "      optional: true\n",
          "      {{ if eq .Spec.ServiceAccountName \"\" }}\n",
          "      secretName: istio.default\n",
          "      {{ else -}}\n",
          "      secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName }}\n",
          "      {{  end -}}\n",
          "  {{- end }}\n",
          "    {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}\n",
          "    {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\n",
          "  - name: \"{{ $index }}\"\n",
          "    {{ toYaml $value | indent 2 }}\n",
          "    {{ end }}\n",
          "    {{ end }}\n",
          "  {{- if and (eq .Values.global.proxy.tracer \"lightstep\") .Values.global.tracer.lightstep.cacertPath }}\n",
          "  - name: lightstep-certs\n",
          "    secret:\n",
          "      optional: true\n",
          "      secretName: lightstep.cacert\n",
          "  {{- end }}\n",
          "  {{- if .Values.global.podDNSSearchNamespaces }}\n",
          "  dnsConfig:\n",
          "    searches:\n",
          "      {{- range .Values.global.podDNSSearchNamespaces }}\n",
          "      - {{ render . }}\n",
          "      {{- end }}\n",
          "  {{- end }}\n",
          "  podRedirectAnnot:\n",
          "    sidecar.istio.io/interceptionMode: \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\"\n",
          "    traffic.sidecar.istio.io/includeOutboundIPRanges: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}\"\n",
          "    traffic.sidecar.istio.io/excludeOutboundIPRanges: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}\"\n",
          "    traffic.sidecar.istio.io/includeInboundPorts: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (includeInboundPorts .Spec.Containers) }}\"\n",
          "    traffic.sidecar.istio.io/excludeInboundPorts: \"{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\"\n",
          "  {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts \"\") }}\n",
          "    traffic.sidecar.istio.io/excludeOutboundPorts: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\"\n",
          "  {{- end }}\n",
          "    traffic.sidecar.istio.io/kubevirtInterfaces: \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}\""
        ]
      )
    }
  }
]
